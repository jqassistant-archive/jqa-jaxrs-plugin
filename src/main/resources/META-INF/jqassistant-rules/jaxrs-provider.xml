<jqassistant-rules xmlns="http://schema.jqassistant.org/rule/v1.10"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://schema.jqassistant.org/rule/v1.10 http://schema.jqassistant.org/rule/jqassistant-rule-v1.10.xsd">

<concept id="jaxrs:EntityProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.MessageBodyReader"
		or "javax.ws.rs.ext.MessageBodyWriter" and labels them with 'JaxRS' and 'EntityProvider'
		</description>
		<cypher><![CDATA[
            MATCH
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
            WHERE
              a.fqn IN ["javax.ws.rs.ext.MessageBodyReader", "javax.ws.rs.ext.MessageBodyWriter"]
            SET
              c:JaxRS:EntityProvider
            RETURN
              DISTINCT c AS EntityProvider
        ]]></cypher>
	</concept>

	<concept id="jaxrs:ContextProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.ContextResolver" and labels them with 'JaxRS' and 'ContextProvider'
		</description>
		<cypher><![CDATA[
            MATCH
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
            WHERE
              a.fqn = "javax.ws.rs.ext.ContextResolver"
            SET
              c:JaxRS:ContextProvider
            RETURN
              DISTINCT c AS ContextProvider
        ]]></cypher>
	</concept>

	<concept id="jaxrs:ExceptionMappingProvider">
		<description>Finds classes that implement "javax.ws.rs.ext.ExceptionMapper" and labels them with 'JaxRS' and 'ExceptionMappingProvider'
		</description>
		<cypher><![CDATA[
            MATCH
              (c:Type:Class)-[:IMPLEMENTS]->(a:Type)
            WHERE
              a.fqn = "javax.ws.rs.ext.ExceptionMapper"
            SET
              c:JaxRS:ExceptionMappingProvider
            RETURN
              DISTINCT c AS ExceptionMappingProvider
        ]]></cypher>
	</concept>

</jqassistant-rules>
